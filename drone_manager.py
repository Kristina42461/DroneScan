#–¶–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Å–µ–º–∏ –¥—Ä–æ–Ω–∞–º–∏.
#–≠—Ç–æ—Ç –º–æ–¥—É–ª—å –∏–Ω–∫–∞–ø—Å—É–ª–∏—Ä—É–µ—Ç –ª–æ–≥–∏–∫—É –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è, –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥ –¥–ª—è –¥—Ä–æ–Ω–æ–≤.

from djitellopy import Tello
from drone_utils import keep_alive
import threading
import config
from rich import print
from bottle_tracker import start_bottle_tracking

drones = {}

#–°–ø–∏—Å–∫–∏ –¥—Ä–æ–Ω–æ–≤
DRONE_IPS = {
    '–ø–µ—Ä–≤—ã–π': '192.168.0.120',
    #'–≤—Ç–æ—Ä–æ–π': '192.168.0.121',
    #'—Ç—Ä–µ—Ç–∏–π': '192.168.0.158'
    #'—á–µ—Ç–≤–µ—Ä—Ç—ã–π': '192.168.0.184'
}

#–°–ø–∏—Å–∫–∏ –∫–ª–∞—Å—Å–æ–≤ –æ–±—ä–µ–∫—Ç–æ–≤
CLASS_NAMES = {
    "–±—É—Ç—ã–ª–∫—É": 39,
    "—á–µ–ª–æ–≤–µ–∫–∞": 0,   # 0 ‚Äì —á–µ–ª–æ–≤–µ–∫ –≤ COCO
    "–∫–æ—à–∫—É": 15,     # –ø—Ä–∏–º–µ—Ä
    "—Å–æ–±–∞–∫—É": 16,    # –ø—Ä–∏–º–µ—Ä
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π –∫ –¥—Ä–æ–Ω–∞–º
def initialize_drones():
    for name, ip in DRONE_IPS.items():
        print(f"\nüîÑ –ü–æ–¥–∫–ª—é—á–∞—é {name} –ø–æ IP {ip}...")
        try:
            tello = Tello(host=ip)
            tello.connect()
            print(f"‚úÖ {name} –ø–æ–¥–∫–ª—é—á–µ–Ω —É—Å–ø–µ—à–Ω–æ.")
            drones[name] = {
                "tello": tello,
                "frame_reader": None,
                "streaming": False,
                "ip": ip
            }
        except Exception as e:
            print(f"‚ùå {name} –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å: {e}")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –≤–∏–¥–µ–æ –ø–æ—Ç–æ–∫–∞
def start_video_stream(drone_name):
    drone_data = drones.get(drone_name)
    if not drone_data:
        print(f"‚ùå –î—Ä–æ–Ω {drone_name} –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return

    if drone_data["streaming"]:
        print(f"‚ö†Ô∏è –í–∏–¥–µ–æ–ø–æ—Ç–æ–∫ —É {drone_name} —É–∂–µ –∞–∫—Ç–∏–≤–µ–Ω.")
        return

    tello = drone_data["tello"]
    tello.streamon()
    drone_data["frame_reader"] = tello.get_frame_read()
    drone_data["streaming"] = True
    print(f"üìπ –í–∏–¥–µ–æ–ø–æ—Ç–æ–∫ —É {drone_name} –∑–∞–ø—É—â–µ–Ω.")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤–∏–¥–µ–æ –ø–æ—Ç–æ–∫–∞
def stop_video_stream(drone_name):
    drone_data = drones.get(drone_name)
    if not drone_data:
        print(f"‚ùå –î—Ä–æ–Ω {drone_name} –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return

    if not drone_data["streaming"]:
        print(f"‚ö†Ô∏è –í–∏–¥–µ–æ–ø–æ—Ç–æ–∫ —É {drone_name} —É–∂–µ –æ—Ç–∫–ª—é—á—ë–Ω.")
        return

    tello = drone_data["tello"]
    tello.streamoff()
    drone_data["streaming"] = False
    drone_data["frame_reader"] = None
    print(f"‚õî –í–∏–¥–µ–æ–ø–æ—Ç–æ–∫ —É {drone_name} –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")

#–§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è
def stop_tracking():
    global tracking_stop_event, tracking_thread
    tracking_stop_event.set()
    if tracking_thread and tracking_thread.is_alive():
        tracking_thread.join()
    tracking_thread = None

#–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥ –¥—Ä–æ–Ω–∞
def execute_drone_command(drone_name, command):
    if drone_name not in drones:
        return "–î—Ä–æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω."

    drone_data = drones[drone_name]
    tello = drone_data["tello"]
    frame_reader = drone_data["frame_reader"]

    # üëâ –ü—Ä–æ–≤–µ—Ä–∫–∞: —ç—Ç–æ –∫–æ–º–∞–Ω–¥–∞ —Å–ª–µ–∂–µ–Ω–∏—è?
    for word, class_id in CLASS_NAMES.items():
        if f"–Ω–∞–π–¥–∏ {word}" in command:
            print(f"üéØ –ö–æ–º–∞–Ω–¥–∞: –Ω–∞–π–¥–∏ {word} (class_id: {class_id})")
            threading.Thread(
                target=start_bottle_tracking,
                args=(tello, frame_reader),
                kwargs={"target_class_id": class_id},
                daemon=True
            ).start()
            return

    # üëâ –û–±—ã—á–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã ‚Äî —á–µ—Ä–µ–∑ –ø–æ—Ç–æ–∫
    def run_command():
        try:
            if command == '–≤–∫–ª—é—á–∏ –ø–æ—Ç–æ–∫':
                start_video_stream(drone_name)
            elif command == '–æ—Ç–∫–ª—é—á–∏ –ø–æ—Ç–æ–∫':
                stop_video_stream(drone_name)
            elif command == '–Ω–∞–≤–µ—Ä—Ö':
                tello.takeoff()
                keep_alive(tello)
            elif command == '—Å—Ç–æ–ø':
                tello.land()
            elif command == '–≤–ø–µ—Ä—ë–¥':
                tello.move_forward(30)
            elif command == '–ø–æ–≤–æ—Ä–æ—Ç':
                tello.rotate_clockwise(90)
            else:
                print("‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞")
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã '{command}': {e}")

    threading.Thread(target=run_command, daemon=True).start()